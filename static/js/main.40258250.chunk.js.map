{"version":3,"sources":["components/TreeView.js","components/Toolbar.js","components/Note.js","components/DeletePopup.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","height","flexGrow","width","treeDiv","overflow","whiteSpace","textOverflow","FileSystemNavigator","notes","onNoteClick","returnActiveNote","classes","TreeView","className","multiSelect","selected","id","map","note","TreeItem","nodeId","size","label","name","onLabelClick","color","theme","display","flexDirection","alignContent","title","flexBasis","padding","date","resize","fontSize","Toolbar","onNoteTitleChange","TextField","placeholder","fullWidth","variant","value","onChange","InputProps","input","disabled","custom_theme","editorDark","palette","text","primary","borderColor","secondary","backgroundColor","background","paper","default","Note","onNoteContentChange","useTheme","autofocusNoSpellcheckerOptions","useMemo","autofocus","spellChecker","hideIcons","options","content","DeletePopup","isDeletePopupOpen","deletePopupOpenClose","deleteNote","Dialog","open","onClose","DialogContent","DialogContentText","DialogActions","Button","onClick","textTransform","element","transform","margin","maxWidth","maxHeight","minWidth","minHeight","Sidebar","changeNotesHidden","addNote","changeTheme","prefersDarkMode","setNotes","useState","setDeletePopupOpen","fileInputRef","useRef","a","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","current","ref","accept","hidden","style","evt","read","FileReader","readAsBinaryString","target","files","onloadend","parse","result","App","darkMode","useMediaQuery","setPrefersDarkMode","createMuiTheme","useEffect","json","localStorage","getItem","savedNotes","setItem","activeNoteIndex","setActiveNoteIndex","notesHidden","setNotesHidden","uuidv4","Date","toLocaleString","newNote","length","copy","splice","CssBaseline","Box","borderRight","findIndex","noteIndex","e","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40258250.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport {TreeView} from \"@material-ui/lab\";\n\n// import { withTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: 10,\n        flexGrow: 1,\n        width: '100%',\n    },\n    treeDiv:{\n        overflow: \"hidden\",\n        whiteSpace: 'nowrap',\n        textOverflow: \"ellipsis\",\n        width: '98%',\n    },\n}))\n\nexport const FileSystemNavigator = ({notes, onNoteClick, returnActiveNote}) => {\n    const classes = useStyles();\n    return (\n        <TreeView\n            className={classes.root}\n            multiSelect={false}\n            selected={returnActiveNote() ? returnActiveNote().id : ''}\n        >\n            {notes.map((note) =>\n                (<div key={note.id} className={classes.treeDiv}>\n                        <TreeItem\n                            nodeId={note.id}\n                            size={\"small\"}\n                            label={note.name ? note.name : '...'}\n                            onLabelClick={()=> onNoteClick(note.id)}\n                            color={'secondary'}\n                        />\n                    </div>\n                )\n            )}\n        </TreeView>\n    );\n}\n\n","import {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignContent: \"flex-start\"\n    },\n    title: {\n        flexBasis: '65%',\n        padding: '5px 5px',\n\n    },\n    date: {\n        flexBasis: '35%',\n        padding: '5px 5px',\n    },\n    resize: {\n        fontSize: 15,\n    }\n}));\n\nexport function Toolbar({returnActiveNote, onNoteTitleChange}) {\n    const classes = useStyles();\n\n    return (\n            <div className={classes.root}>\n                <TextField\n                    id=\"title\"\n                    className={classes.title}\n                    placeholder=\"title\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size={'small'}\n                    value={returnActiveNote() ? returnActiveNote().name : ''}\n                    onChange={onNoteTitleChange}\n                    InputProps={{\n                        classes: {\n                            input: classes.resize\n                        }\n                    }}\n                />\n                <TextField\n                    id=\"date\"\n                    className={classes.date}\n                    placeholder=\"date\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size={'small'}\n                    disabled={true}\n                    value={returnActiveNote() ? returnActiveNote().date : ''}\n                    // onChange={onNoteTitleChange}\n                    InputProps={{\n                        classes: {\n                            input: classes.resize\n                        }\n                    }}\n                />\n            </div>\n\n    );\n}\n","import {useMemo} from 'react';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((custom_theme) => ({\n    root: {\n        padding: \"5px 5px\"\n    },\n    editorDark: {\n        \"& .CodeMirror\": {\n            color: custom_theme.palette.text.primary,\n            borderColor: custom_theme.palette.text.secondary,\n            backgroundColor: \"inherit\"\n        },\n        \"& .cm-s-easymde .CodeMirror-cursor\": {\n            borderColor: custom_theme.palette.text.primary\n        },\n        \"& .editor-toolbar\":{\n            borderColor: custom_theme.palette.text.primary\n        },\n        \"& .editor-toolbar > *\": {\n            color: custom_theme.palette.text.primary,\n        },\n        \"& .editor-toolbar > .active, .editor-toolbar > button:hover, .editor-preview pre, .cm-s-easymde .cm-comment\": {\n            backgroundColor: custom_theme.palette.background.paper,\n        },\n        \"& .editor-preview\": {\n            backgroundColor: custom_theme.palette.background.default\n        }\n    }\n}))\n\nconst Note = ({returnActiveNote, onNoteContentChange}) => {\n    const theme = useTheme()\n\n    const classes = useStyles(theme)\n\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n            autofocus: true,\n            spellChecker: false,\n            hideIcons: ['side-by-side', 'fullscreen'],\n            // TODO: uploadImage: true\n        }\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.editorDark}>\n                <SimpleMDE options={autofocusNoSpellcheckerOptions}\n                           value={returnActiveNote() ? returnActiveNote().content : ''}\n                           onChange={onNoteContentChange}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst DeletePopup = ({isDeletePopupOpen, deletePopupOpenClose, deleteNote}) => {\n    return (\n        <Dialog open={isDeletePopupOpen} onClose={deletePopupOpenClose}>\n                <DialogContent id={'delete-note?'}>\n                    <DialogContentText>\n                        Are you sure you want to delete your note?\n                    </DialogContentText>\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                        onClick={()=>{\n                            deletePopupOpenClose()\n                        }}\n                    >No</Button>\n                    <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={()=>{\n                                deleteNote()\n                                deletePopupOpenClose()\n                            }}\n                    >Yes</Button>\n                </DialogActions>\n\n\n        </Dialog>\n    );\n};\n\nexport default DeletePopup;","import React, {useState, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeletePopup from \"./DeletePopup\";\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        textTransform: 'none',\n    },\n    element: {\n        transform: \"rotate(-90deg)\",\n        margin: '12px 0px',\n        padding: '12px 0px',\n        maxWidth: '40px', maxHeight: '30px', minWidth: '40px', minHeight: '30px',\n        fontSize: 10\n    }\n}))\n\n\nconst Sidebar = ({changeNotesHidden, addNote, deleteNote, returnActiveNote, notes, changeTheme, prefersDarkMode, setNotes}) => {\n    const classes = useStyles();\n\n    const createNewNote = () => {\n        const note = {\n            name: 'new note',\n            content: ''\n        }\n        addNote(note);\n    }\n\n    const [isDeletePopupOpen, setDeletePopupOpen] = useState(false)\n\n    const deletePopupOpenClose = () => {\n        if (returnActiveNote()) {\n            setDeletePopupOpen(!isDeletePopupOpen)\n        }\n    }\n\n    const exportNotes = () => {\n        let a = document.createElement('a')\n        let file = new Blob([JSON.stringify(notes)], {type: 'text/plain'})\n        a.href = URL.createObjectURL(file);\n        a.download = 'notes.txt';\n        a.click();\n    }\n\n    const fileInputRef=useRef();\n\n    const importNotes = (evt) => {\n        const read = new FileReader()\n        read.readAsBinaryString(evt.target.files[0]);\n        read.onloadend = function () {\n            setNotes(JSON.parse(read.result))\n        }\n    }\n\n\n    return (\n        <>\n            <DeletePopup isDeletePopupOpen={isDeletePopupOpen} deletePopupOpenClose={deletePopupOpenClose}\n                         deleteNote={deleteNote}/>\n            <div className={classes.root}>\n                <Button onClick={changeNotesHidden} className={classes.element}>Notes</Button>\n                <Button className={classes.element} onClick={exportNotes}>Export</Button>\n\n                <Button className={classes.element} onClick={()=>fileInputRef.current.click()}>\n                    Import\n\n                </Button>\n                <input ref={fileInputRef} type={'file'} accept={'.txt'} hidden style={{display:'none'}} onChange={importNotes}/>\n\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        createNewNote()\n                    }\n                    }\n                >\n                    <AddIcon/>\n                </Button>\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        deletePopupOpenClose()\n                    }}\n                >\n                    <DeleteIcon style={{transform: \"rotate(90deg)\"}}/>\n                </Button>\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        changeTheme()\n                    }}\n                >\n                    {prefersDarkMode ?\n                        <Brightness7Icon style={{transform: \"rotate(90deg)\"}}/> :\n                        <Brightness4Icon style={{transform: \"rotate(90deg)\"}}/>}\n\n                </Button>\n            </div>\n        </>\n\n    );\n}\n\nexport default Sidebar;","import './App.css';\nimport {FileSystemNavigator} from './components/TreeView';\nimport {Toolbar} from './components/Toolbar';\nimport {useState, useEffect, useMemo} from \"react\";\nimport Note from './components/Note'\nimport {v4 as uuidv4} from 'uuid';\nimport Sidebar from \"./components/Sidebar\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from '@material-ui/core/Box';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\n\n//template rsc\n\n\nfunction App() {\n    const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [prefersDarkMode, setPrefersDarkMode] = useState(darkMode)\n    const custom_theme = useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n    const changeTheme= ()=>{\n        setPrefersDarkMode(!prefersDarkMode)\n        return prefersDarkMode\n    }\n\n    const [notes, setNotes] = useState([\n        {\n            id: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n            name: \"first note\",\n            date: 'Tue Jun 08 2021 15:15:42 GMT+0200 (Central European Summer Time)',\n            content: \"gg boiz\"\n        }\n    ])\n\n    useEffect(() => {\n        const json = localStorage.getItem(\"notes\");\n        const savedNotes = JSON.parse(json);\n        if (savedNotes) {\n            setNotes(savedNotes);\n        }\n    }, []);\n\n    useEffect(() => {\n        const json = JSON.stringify(notes)\n        localStorage.setItem(\"notes\", json)\n    }, [notes])\n\n\n    const [activeNoteIndex, setActiveNoteIndex] = useState(0)\n    const [notesHidden, setNotesHidden] = useState(false)\n\n    const changeNotesHidden = () => {\n        setNotesHidden(!notesHidden)\n    }\n\n    const onNoteClick = (id) => {\n        setActiveNoteIndex(notes.findIndex((note) => note.id === id))\n    }\n\n    //argument has name, content without id\n    const addNote = (note) => {\n        const id = uuidv4()\n        const date = Date().toLocaleString()\n        const newNote = {id, date, ...note}\n        setNotes([...notes, newNote])\n    }\n\n    const deleteNote = () => {\n        //move deleting notes here\n        if (notes.length > 0) {\n            let copy = [...notes]\n            copy.splice(activeNoteIndex, 1)\n            setActiveNoteIndex(notes.length > 1 ? activeNoteIndex - 1 : -1)\n            setNotes(copy)\n        }\n    }\n\n    const onNoteTitleChange = (e) => {\n        const copy = notes.map(i => i)\n        copy[activeNoteIndex] = {...copy[activeNoteIndex], name: e.target.value};\n        setNotes(copy);\n    }\n\n    const onNoteContentChange = (value) => {\n        if (activeNoteIndex >= 0) {\n            let copy = [...notes]\n            copy[activeNoteIndex].content = value\n            setNotes(copy)\n        }\n    }\n\n    const returnActiveNote = () => {\n        return activeNoteIndex >= 0 ? notes[activeNoteIndex] : null\n    }\n\n    return (\n        <MuiThemeProvider theme={custom_theme}>\n            <CssBaseline/>\n            <Box className={notesHidden ? \"parent hidden\" : \"parent\"}>\n                <Box borderRight={1}  className={\"sidebar\"}>\n                    <Sidebar changeNotesHidden={changeNotesHidden} addNote={addNote}\n                             deleteNote={deleteNote}\n                             returnActiveNote={returnActiveNote} notes={notes}\n                             changeTheme={changeTheme}\n                             prefersDarkMode={prefersDarkMode}\n                             setNotes={setNotes}\n                    />\n                </Box>\n                <Box borderRight={1} className={notesHidden ? \"treeview hidden\" : \"treeview\"}>\n                    <FileSystemNavigator notes={notes} onNoteClick={onNoteClick} noteIndex={activeNoteIndex}\n                                         returnActiveNote={returnActiveNote}/>\n                </Box>\n                <Box className=\"toolbar\">\n                    <Toolbar addNote={addNote} returnActiveNote={returnActiveNote} deleteNote={deleteNote}\n                             onNoteTitleChange={onNoteTitleChange}/>\n                </Box>\n                <Box className=\"note\">\n                    <Note\n                        returnActiveNote={returnActiveNote}\n                        onNoteContentChange={onNoteContentChange}\n                        prefersDarkMode={prefersDarkMode}\n                        custom_theme={custom_theme}\n                    />\n                </Box>\n\n            </Box>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}