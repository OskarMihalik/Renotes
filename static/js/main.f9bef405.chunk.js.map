{"version":3,"sources":["welcomeContent.js","components/TreeView.js","components/Toolbar.js","components/Note.js","components/DeletePopup.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","welcomeNote","id","name","date","content","useStyles","makeStyles","root","height","flexGrow","width","treeDiv","overflow","whiteSpace","textOverflow","FileSystemNavigator","notes","onNoteClick","returnActiveNote","classes","TreeView","className","multiSelect","selected","map","note","TreeItem","nodeId","size","label","onLabelClick","color","display","flexDirection","alignContent","title","flexBasis","padding","resize","fontSize","Toolbar","onNoteTitleChange","TextField","placeholder","fullWidth","variant","value","onChange","InputProps","input","disabled","custom_theme","editorDark","palette","text","primary","borderColor","secondary","backgroundColor","background","paper","default","Note","onNoteContentChange","theme","useTheme","autofocusNoSpellcheckerOptions","useMemo","autofocus","spellChecker","hideIcons","options","DeletePopup","isDeletePopupOpen","deletePopupOpenClose","deleteNote","Dialog","open","onClose","DialogContent","DialogContentText","DialogActions","Button","onClick","textTransform","element","transform","margin","maxWidth","maxHeight","minWidth","minHeight","Sidebar","changeNotesHidden","addNote","changeTheme","prefersDarkMode","setNotes","useState","setDeletePopupOpen","fileInputRef","useRef","a","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","current","ref","accept","hidden","style","evt","read","FileReader","readAsBinaryString","target","files","onloadend","parse","result","e","alert","App","darkMode","useMediaQuery","setPrefersDarkMode","createMuiTheme","require","useEffect","json","localStorage","getItem","savedNotes","setItem","activeNoteIndex","setActiveNoteIndex","notesHidden","setNotesHidden","uuidv4","Date","toLocaleString","newNote","length","copy","splice","CssBaseline","Box","borderRight","findIndex","noteIndex","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9bef405.chunk.js","sourcesContent":["const welcomeNote =    {\n    id: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    name: \"first note\",\n    date: 'Tue Jun 08 2021 15:15:42 GMT+0200 (Central European Summer Time)',\n    content: '# Intro\\n' +\n        'Go ahead, play around with the editor! Be sure to check out **bold** and *italic* styling, or even [links](https://google.com). You can type the Markdown syntax, use the toolbar, or use shortcuts like `cmd-b` or `ctrl-b`.\\n' +\n        '\\n' +\n        '## Lists\\n' +\n        'Unordered lists can be started using the toolbar or by typing `* `, `- `, or `+ `. Ordered lists can be started by typing `1. `.\\n' +\n        '\\n' +\n        '#### Unordered\\n' +\n        '* Lists are a piece of cake\\n' +\n        '* They even auto continue as you type\\n' +\n        '* A double enter will end them\\n' +\n        '* Tabs and shift-tabs work too\\n' +\n        '\\n' +\n        '#### Ordered\\n' +\n        '1. Numbered lists...\\n' +\n        '2. ...work too!\\n' +\n        '\\n' +\n        '## What about images?\\n' +\n        '![Yes](https://i.imgur.com/sZlktY7.png)'\n}\n\nmodule.exports = {welcomeNote}","import React from 'react';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport {TreeView} from \"@material-ui/lab\";\n\n// import { withTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: 10,\n        flexGrow: 1,\n        width: '100%',\n    },\n    treeDiv:{\n        overflow: \"hidden\",\n        whiteSpace: 'nowrap',\n        textOverflow: \"ellipsis\",\n        width: '98%',\n    },\n}))\n\nexport const FileSystemNavigator = ({notes, onNoteClick, returnActiveNote}) => {\n    const classes = useStyles();\n    return (\n        <TreeView\n            className={classes.root}\n            multiSelect={false}\n            selected={returnActiveNote() ? returnActiveNote().id : ''}\n        >\n            {notes.map((note) =>\n                (<div key={note.id} className={classes.treeDiv}>\n                        <TreeItem\n                            nodeId={note.id}\n                            size={\"small\"}\n                            label={note.name ? note.name : '...'}\n                            onLabelClick={()=> onNoteClick(note.id)}\n                            color={'secondary'}\n                        />\n                    </div>\n                )\n            )}\n        </TreeView>\n    );\n}\n\n","import {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignContent: \"flex-start\",\n    },\n    title: {\n        flexBasis: '65%',\n        padding: '5px 5px',\n\n    },\n    date: {\n        flexBasis: '35%',\n        padding: '5px 5px',\n    },\n    resize: {\n        fontSize: 15,\n    }\n}));\n\nexport function Toolbar({returnActiveNote, onNoteTitleChange}) {\n    const classes = useStyles();\n\n    return (\n            <div className={classes.root}>\n                <TextField\n                    id=\"title\"\n                    className={classes.title}\n                    placeholder=\"title\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size={'small'}\n                    value={returnActiveNote() ? returnActiveNote().name : ''}\n                    onChange={onNoteTitleChange}\n                    InputProps={{\n                        classes: {\n                            input: classes.resize\n                        }\n                    }}\n                />\n                <TextField\n                    id=\"date\"\n                    className={classes.date}\n                    placeholder=\"date\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size={'small'}\n                    disabled={true}\n                    value={returnActiveNote() ? returnActiveNote().date : ''}\n                    // onChange={onNoteTitleChange}\n                    InputProps={{\n                        classes: {\n                            input: classes.resize\n                        }\n                    }}\n                />\n            </div>\n\n    );\n}\n","import {useMemo} from 'react';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((custom_theme) => ({\n    root: {\n        padding: \"5px 5px\",\n    },\n    editorDark: {\n        \"& .CodeMirror\": {\n            color: custom_theme.palette.text.primary,\n            borderColor: custom_theme.palette.text.secondary,\n            backgroundColor: \"inherit\",\n            height: \"80vh\",\n        },\n        \"& .cm-s-easymde .CodeMirror-cursor\": {\n            borderColor: custom_theme.palette.text.primary\n        },\n        \"& .editor-toolbar\":{\n            borderColor: custom_theme.palette.text.primary\n        },\n        \"& .editor-toolbar > *\": {\n            color: custom_theme.palette.text.primary,\n        },\n        \"& .editor-toolbar > .active, .editor-toolbar > button:hover, .editor-preview pre, .cm-s-easymde .cm-comment\": {\n            backgroundColor: custom_theme.palette.background.paper,\n        },\n        \"& .editor-preview\": {\n            backgroundColor: custom_theme.palette.background.default\n        },\n    }\n}))\n\nconst Note = ({returnActiveNote, onNoteContentChange}) => {\n    const theme = useTheme()\n\n    const classes = useStyles(theme)\n\n    const autofocusNoSpellcheckerOptions = useMemo(() => {\n        return {\n            autofocus: true,\n            spellChecker: false,\n            hideIcons: ['side-by-side', 'fullscreen'],\n            // TODO: uploadImage: true\n        }\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.editorDark}>\n                <SimpleMDE options={autofocusNoSpellcheckerOptions}\n                           value={returnActiveNote() ? returnActiveNote().content : ''}\n                           onChange={onNoteContentChange}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Note;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst DeletePopup = ({isDeletePopupOpen, deletePopupOpenClose, deleteNote}) => {\n    return (\n        <Dialog open={isDeletePopupOpen} onClose={deletePopupOpenClose}>\n                <DialogContent id={'delete-note?'}>\n                    <DialogContentText>\n                        Are you sure you want to delete your note?\n                    </DialogContentText>\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                        onClick={()=>{\n                            deletePopupOpenClose()\n                        }}\n                    >No</Button>\n                    <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={()=>{\n                                deleteNote()\n                                deletePopupOpenClose()\n                            }}\n                    >Yes</Button>\n                </DialogActions>\n\n\n        </Dialog>\n    );\n};\n\nexport default DeletePopup;","import React, {useState, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeletePopup from \"./DeletePopup\";\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        textTransform: 'none',\n    },\n    element: {\n        transform: \"rotate(-90deg)\",\n        margin: '12px 0px',\n        padding: '12px 0px',\n        maxWidth: '40px', maxHeight: '30px', minWidth: '40px', minHeight: '30px',\n        fontSize: 10\n    }\n}))\n\n\nconst Sidebar = ({changeNotesHidden, addNote, deleteNote, returnActiveNote, notes, changeTheme, prefersDarkMode, setNotes}) => {\n    const classes = useStyles();\n\n    const createNewNote = () => {\n        const note = {\n            name: 'new note',\n            content: ''\n        }\n        addNote(note);\n    }\n\n    const [isDeletePopupOpen, setDeletePopupOpen] = useState(false)\n\n    const deletePopupOpenClose = () => {\n        if (returnActiveNote()) {\n            setDeletePopupOpen(!isDeletePopupOpen)\n        }\n    }\n\n    const exportNotes = () => {\n        let a = document.createElement('a')\n        let file = new Blob([JSON.stringify(notes)], {type: 'text/plain'})\n        a.href = URL.createObjectURL(file);\n        a.download = 'notes.txt';\n        a.click();\n    }\n\n    const fileInputRef=useRef();\n\n    const importNotes = (evt) => {\n        const read = new FileReader()\n        read.readAsBinaryString(evt.target.files[0]);\n        read.onloadend = function () {\n            try {\n                setNotes(JSON.parse(read.result))\n            }catch (e) {\n                alert('something went wrong while importing data')\n            }\n\n        }\n    }\n\n\n    return (\n        <>\n            <DeletePopup isDeletePopupOpen={isDeletePopupOpen} deletePopupOpenClose={deletePopupOpenClose}\n                         deleteNote={deleteNote}/>\n            <div className={classes.root}>\n                <Button onClick={changeNotesHidden} className={classes.element}>Notes</Button>\n                <Button className={classes.element} onClick={exportNotes}>Export</Button>\n\n                <Button className={classes.element} onClick={()=>fileInputRef.current.click()}>\n                    Import\n\n                </Button>\n                <input ref={fileInputRef} type={'file'} accept={'.txt'} hidden style={{display:'none'}} onChange={importNotes}/>\n\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        createNewNote()\n                    }\n                    }\n                >\n                    <AddIcon/>\n                </Button>\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        deletePopupOpenClose()\n                    }}\n                >\n                    <DeleteIcon style={{transform: \"rotate(90deg)\"}}/>\n                </Button>\n                <Button\n                    className={classes.element}\n                    onClick={() => {\n                        changeTheme()\n                    }}\n                >\n                    {prefersDarkMode ?\n                        <Brightness7Icon style={{transform: \"rotate(90deg)\"}}/> :\n                        <Brightness4Icon style={{transform: \"rotate(90deg)\"}}/>}\n\n                </Button>\n            </div>\n        </>\n\n    );\n}\n\nexport default Sidebar;","import './App.css';\nimport {FileSystemNavigator} from './components/TreeView';\nimport {Toolbar} from './components/Toolbar';\nimport {useState, useEffect, useMemo} from \"react\";\nimport Note from './components/Note'\nimport {v4 as uuidv4} from 'uuid';\nimport Sidebar from \"./components/Sidebar\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from '@material-ui/core/Box';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\n\n//template rsc\n\n\nfunction App() {\n    const darkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [prefersDarkMode, setPrefersDarkMode] = useState(darkMode)\n    const custom_theme = useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n    const changeTheme = () => {\n        setPrefersDarkMode(!prefersDarkMode)\n        return prefersDarkMode\n    }\n\n    const {welcomeNote} = require('./welcomeContent')\n    const [notes, setNotes] = useState([welcomeNote])\n\n    useEffect(() => {\n        const json = localStorage.getItem(\"notes\");\n        const savedNotes = JSON.parse(json);\n        if (savedNotes) {\n            setNotes(savedNotes);\n        }\n    }, []);\n\n    useEffect(() => {\n        const json = JSON.stringify(notes)\n        localStorage.setItem(\"notes\", json)\n    }, [notes])\n\n\n    const [activeNoteIndex, setActiveNoteIndex] = useState(0)\n    const [notesHidden, setNotesHidden] = useState(false)\n\n    const changeNotesHidden = () => {\n        setNotesHidden(!notesHidden)\n    }\n\n    const onNoteClick = (id) => {\n        setActiveNoteIndex(notes.findIndex((note) => note.id === id))\n    }\n\n    //argument has name, content without id\n    const addNote = (note) => {\n        const id = uuidv4()\n        const date = Date().toLocaleString()\n        const newNote = {id, date, ...note}\n        setNotes([...notes, newNote])\n    }\n\n    const deleteNote = () => {\n        //move deleting notes here\n        if (notes.length > 0) {\n            let copy = [...notes]\n            copy.splice(activeNoteIndex, 1)\n            setActiveNoteIndex(notes.length > 1 ? activeNoteIndex - 1 : -1)\n            setNotes(copy)\n        }\n    }\n\n    const onNoteTitleChange = (e) => {\n        const copy = notes.map(i => i)\n        copy[activeNoteIndex] = {...copy[activeNoteIndex], name: e.target.value};\n        setNotes(copy);\n    }\n\n    const onNoteContentChange = (value) => {\n        if (activeNoteIndex >= 0) {\n            let copy = [...notes]\n            copy[activeNoteIndex].content = value\n            setNotes(copy)\n        }\n    }\n\n    const returnActiveNote = () => {\n        return activeNoteIndex >= 0 ? notes[activeNoteIndex] : null\n    }\n\n    return (\n        <>\n            <MuiThemeProvider theme={custom_theme}>\n                <CssBaseline/>\n                <Box className={notesHidden ? \"parent hidden\" : \"parent\"}>\n                    <Box borderRight={1} className={\"sidebar\"}>\n                        <Sidebar changeNotesHidden={changeNotesHidden} addNote={addNote}\n                                 deleteNote={deleteNote}\n                                 returnActiveNote={returnActiveNote} notes={notes}\n                                 changeTheme={changeTheme}\n                                 prefersDarkMode={prefersDarkMode}\n                                 setNotes={setNotes}\n                        />\n                    </Box>\n                    <Box borderRight={1} className={notesHidden ? \"treeview hidden\" : \"treeview\"}>\n                        <FileSystemNavigator notes={notes} onNoteClick={onNoteClick} noteIndex={activeNoteIndex}\n                                             returnActiveNote={returnActiveNote}/>\n                    </Box>\n                    <Box className=\"toolbar\">\n                        <Toolbar addNote={addNote} returnActiveNote={returnActiveNote} deleteNote={deleteNote}\n                                 onNoteTitleChange={onNoteTitleChange}/>\n                    </Box>\n                    <Box className=\"note\">\n                        <Note\n                            returnActiveNote={returnActiveNote}\n                            onNoteContentChange={onNoteContentChange}\n                            prefersDarkMode={prefersDarkMode}\n                            custom_theme={custom_theme}\n                        />\n                    </Box>\n\n                </Box>\n            </MuiThemeProvider>\n        </>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}